{"version":3,"sources":["reportWebVitals.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/index.js","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/components/ui/editUser.jsx","app/components/page/editUserPage/editUserPage.jsx","app/components/page/editUserPage/index.js","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","API","parse","getById","id","find","user","update","data","userIndex","findIndex","u","Quality","className","Qualities","map","qual","UserPage","userId","history","useHistory","useState","setUser","useEffect","api","onClick","push","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","item","role","Object","keys","defaultProps","SearchStatus","length","number","lastOne","Number","toString","slice","indexOf","renderPhrase","BookMark","status","rest","TableBody","columns","renderContent","column","component","get","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","to","delete","UsersListPage","setCurrentPage","setProfession","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","setUsers","filteredUsers","filter","toLowerCase","count","usersCrop","pageNumber","startIndex","splice","paginate","orderBy","type","placeholder","onChange","target","value","newArray","pageIndex","Users","useParams","validator","config","errors","validate","validateMethod","statusValidate","trim","test","message","fieldName","error","TextField","label","showPassword","setShowPassword","htmlFor","prevState","CheckBoxField","checked","LoginForm","password","stayOn","setData","setErrors","handleChange","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","isValid","onSubmit","e","preventDefault","console","log","disabled","SelectField","defaultOption","options","optionsArray","values","option","RadioField","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","RegisterForm","licence","setQualities","getProfessionById","prof","getQualities","elements","qualitiesArray","elem","quality","professionsList","professionName","qualitiesList","optionName","Login","formType","setFormType","toggleFormType","params","Main","NavBar","aria-current","EditUser","props","match","reduce","acc","newData","EditUserPage","App","editUserPage","exact","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.621ad376.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"Jony7351@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"white4571@twipet.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bob007@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"green7311@fam.biz\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"mindgames6878@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"mindes000@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"gov1903@phis.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"electro@underground.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"mono@super.com\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatatata@underground.com\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joe@trib.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"superstar@star.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nconst API = {\n    users,\n    professions,\n    qualities\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ color, name, _id }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\n\nconst QualitiesList = ({ qualities }) => {\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../api\";\nimport Qualities from \"../../ui/qualities\";\nimport {useHistory} from \"react-router-dom\";\n\nconst UserPage = ({userId}) => {\n    const history = useHistory();\n    const [user, setUser] = useState();\n    useEffect(() => {\n        api.users.getById(userId).then((data) => setUser(data));\n    }, []);\n    const handleClick = () => {\n        history.push(`/users/${user._id}/edit`);\n    };\n    if (user) {\n        return (\n            <div>\n                <h1> {user.name}</h1>\n                <h2>Профессия: {user.profession.name}</h2>\n                <Qualities qualities={user.qualities}/>\n                <p>completedMeetings: {user.completedMeetings}</p>\n                <h2>Rate: {user.rate}</h2>\n                <button onClick={handleClick}> Изменить </button>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: { path: \"profession.name\", name: \"Профессия\" },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport api from \"../../../api\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nconst UsersListPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const [users, setUsers] = useState();\n    useEffect(() => {\n        api.users.fetchAll().then((data) => setUsers(data));\n    }, []);\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        setUsers(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        const filteredUsers = searchQuery\n            ? users.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? users.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : users;\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nconst Users = () => {\n    const params = useParams();\n    const { userId } = params;\n    return <>{userId ? <UserPage userId={userId} /> : <UsersListPage />}</>;\n};\n\nexport default Users;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({options, onChange, name, label, defaultValue}) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const handleChange = (value) => {\n        onChange({name: name, value});\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport api from \"../../api\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: [],\n        licence: false\n    });\n    const [qualities, setQualities] = useState([]);\n    const [professions, setProfession] = useState([]);\n    const [errors, setErrors] = useState({});\n\n    const getProfessionById = (id) => {\n        for (const prof of professions) {\n            if (prof.value === id) {\n                return { _id: prof.value, name: prof.label };\n            }\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality].value) {\n                    qualitiesArray.push({\n                        _id: qualities[quality].value,\n                        name: qualities[quality].label,\n                        color: qualities[quality].color\n                    });\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => {\n            const professionsList = Object.keys(data).map((professionName) => ({\n                label: data[professionName].name,\n                value: data[professionName]._id\n            }));\n            setProfession(professionsList);\n        });\n        api.qualities.fetchAll().then((data) => {\n            const qualitiesList = Object.keys(data).map((optionName) => ({\n                value: data[optionName]._id,\n                label: data[optionName].name,\n                color: data[optionName].color\n            }));\n            setQualities(qualitiesList);\n        });\n    }, []);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        console.log({\n            ...data,\n            profession: getProfessionById(profession),\n            qualities: getQualities(qualities)\n        });\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professions}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualities}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst Main = () => {\n    return <h1> Main Page</h1>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import React, {useEffect, useState} from \"react\";\nimport {validator} from \"../../utils/validator\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport TextField from \"../common/form/textField\";\nimport RadioField from \"../common/form/radioField\";\nimport api from \"../../api\";\nimport SelectField from \"../common/form/selectField\";\nimport {useHistory} from \"react-router-dom\";\n\nconst EditUser = (props) => {\n        const userId = props.props.match.params.userId\n        const [data, setData] = useState();\n        const history = useHistory()\n\n        const handleClick = () => {\n            const qualities = data.qualities.reduce((acc, item) => {\n                acc.push({\n                    _id: item.value,\n                    name: item.label,\n                    color: item.color,\n                })\n                return acc\n            }, [])\n\n            const profession = {\n                \"_id\": data.profession,\n                \"name\": professions.filter(item => item.value === data.profession)[0].label,\n            }\n\n            const newData = {...data, qualities, profession};\n            api.users.update(userId, newData)\n            history.push(`/users/${userId}/`)\n        }\n\n        useEffect(() => {\n            api.users.fetchAll().then((data) => {\n                const user = data.filter(item => item._id === userId)[0]\n                console.log(`До обновления`, user)\n                const qualities = user.qualities.reduce((acc, item) => {\n                    acc.push({\n                        value: item._id,\n                        label: item.name,\n                        color: item.color,\n                    })\n                    return acc\n                }, [])\n\n                user.email = user.email\n                user.name = user.name\n                user.profession = user.profession._id\n                user.sex = user.sex\n                user.qualities = qualities\n                setData(user)\n            })\n        }, []);\n\n\n        const [qualities, setQualities] = useState([]);\n        const [professions, setProfession] = useState([]);\n        const [errors, setErrors] = useState({});\n\n        const getProfessionById = (id) => {\n            for (const prof of professions) {\n                if (prof.value === id) {\n                    return {_id: prof.value, name: prof.label};\n                }\n            }\n        };\n        const getQualities = (elements) => {\n            const qualitiesArray = [];\n            for (const elem of elements) {\n                for (const quality in qualities) {\n                    if (elem.value === qualities[quality].value) {\n                        qualitiesArray.push({\n                            _id: qualities[quality].value,\n                            name: qualities[quality].label,\n                            color: qualities[quality].color\n                        });\n                    }\n                }\n            }\n            return qualitiesArray;\n        };\n\n        useEffect(() => {\n            api.professions.fetchAll().then((data) => {\n                const professionsList = Object.keys(data).map((professionName) => ({\n                    label: data[professionName].name,\n                    value: data[professionName]._id\n                }));\n                setProfession(professionsList);\n            });\n            api.qualities.fetchAll().then((data) => {\n                const qualitiesList = Object.keys(data).map((optionName) => ({\n                    value: data[optionName]._id,\n                    label: data[optionName].name,\n                    color: data[optionName].color\n                }));\n                setQualities(qualitiesList);\n            });\n        }, []);\n        const handleChange = (target) => {\n            setData((prevState) => ({\n                ...prevState,\n                [target.name]: target.value\n            }));\n        };\n        const validatorConfig = {\n            email: {\n                isRequired: {\n                    message: \"Электронная почта обязательна для заполнения\"\n                },\n                isEmail: {\n                    message: \"Email введен некорректно\"\n                }\n            },\n            password: {\n                isRequired: {\n                    message: \"Пароль обязателен для заполнения\"\n                },\n                isCapitalSymbol: {\n                    message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n                },\n                isContainDigit: {\n                    message: \"Пароль должен содержать хотя бы одно число\"\n                },\n                min: {\n                    message: \"Пароль должен состоять минимум из 8 символов\",\n                    value: 8\n                }\n            },\n            profession: {\n                isRequired: {\n                    message: \"Обязательно выберите вашу профессию\"\n                }\n            },\n            licence: {\n                isRequired: {\n                    message:\n                        \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n                }\n            }\n        };\n        useEffect(() => {\n            validate();\n        }, [data]);\n        const validate = () => {\n            const errors = validator(data, validatorConfig);\n            setErrors(errors);\n            return Object.keys(errors).length === 0;\n        };\n        const isValid = Object.keys(errors).length === 0;\n\n        const handleSubmit = (e) => {\n            e.preventDefault();\n            const isValid = validate();\n            if (!isValid) return;\n            const {profession, qualities} = data;\n            console.log({\n                ...data,\n                profession: getProfessionById(profession),\n                qualities: getQualities(qualities)\n            });\n        };\n\n        if (!data) return 'Loading...'\n        return (\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    label=\"Имя\"\n                    name=\"name\"\n                    value={data.name}\n                    onChange={handleChange}\n                    error={errors.name}\n                />\n\n                <TextField\n                    label=\"Электронная почта\"\n                    name=\"email\"\n                    value={data.email}\n                    onChange={handleChange}\n                    error={errors.email}\n                />\n\n                <SelectField\n                    label=\"Выбери свою профессию\"\n                    defaultOption=\"Choose...\"\n                    options={professions}\n                    name=\"profession\"\n                    onChange={handleChange}\n                    value={data.profession}\n                    error={errors.profession}\n                />\n                <RadioField\n                    options={[\n                        {name: \"Male\", value: \"male\"},\n                        {name: \"Female\", value: \"female\"},\n                        {name: \"Other\", value: \"other\"}\n                    ]}\n                    value={data.sex}\n                    name=\"sex\"\n                    onChange={handleChange}\n                    label=\"Выберите ваш пол\"\n                />\n                <MultiSelectField\n                    options={qualities}\n                    onChange={handleChange}\n                    defaultValue={data.qualities}\n                    name=\"qualities\"\n                    label=\"Выберите ваши качества\"\n                />\n\n                <button\n                    className=\"btn btn-primary w-100 mx-auto\"\n                    type=\"submit\"\n                    disabled={!isValid}\n                    onClick={handleClick}\n                >\n                    Обновить\n                </button>\n            </form>\n        );\n    }\n;\n\nexport default EditUser;\n","import React from 'react';\nimport EditUser from \"../../ui/editUser\";\n\nfunction EditUserPage(props) {\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    <>\n                        <h3 className=\"mb-4\"></h3>\n                        <EditUser props={props}/>\n                    </>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditUserPage;","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;","import React from \"react\";\nimport {Route, Switch, Redirect} from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport editUserPage from \"./components/page/editUserPage\";\n\nfunction App() {\n    return (\n        <div>\n            <NavBar/>\n            <Switch>\n                <Route path=\"/users/:userId?/edit\" component={editUserPage}/>\n                <Route path=\"/users/:userId?\" component={Users}/>\n                <Route path=\"/login/:type?\" component={Login}/>\n                <Route path=\"/\" exact component={Main}/>\n                <Redirect to=\"/\"/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}